//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace A11y_Design_PowerPointAddin.Properties {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("A11y_Design_PowerPointAddin.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap a11y_design_250x91 {
            get {
                object obj = ResourceManager.GetObject("a11y_design_250x91", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Ressource vom Typ System.Drawing.Icon ähnlich wie (Symbol).
        /// </summary>
        internal static System.Drawing.Icon a11y_design_32x32 {
            get {
                object obj = ResourceManager.GetObject("a11y_design_32x32", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die a11yPDF Artifact ähnelt.
        /// </summary>
        internal static string a11yElementMarkedAsArtifact {
            get {
                return ResourceManager.GetString("a11yElementMarkedAsArtifact", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die a11yPDF element ähnelt.
        /// </summary>
        internal static string a11yPdfElement {
            get {
                return ResourceManager.GetString("a11yPdfElement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap aboutIcon {
            get {
                object obj = ResourceManager.GetObject("aboutIcon", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die More information about this AddIn ähnelt.
        /// </summary>
        internal static string AboutScreenTip {
            get {
                return ResourceManager.GetString("AboutScreenTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cannot connect to license server. ähnelt.
        /// </summary>
        internal static string AccessDenied {
            get {
                return ResourceManager.GetString("AccessDenied", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Add Alternative Text: ähnelt.
        /// </summary>
        internal static string AddAlternativeText {
            get {
                return ResourceManager.GetString("AddAlternativeText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die a11y pdf ähnelt.
        /// </summary>
        internal static string AddInName {
            get {
                return ResourceManager.GetString("AddInName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Alternative Description for Links is missing ähnelt.
        /// </summary>
        internal static string AlternativeDescriptionForLinkNeeded {
            get {
                return ResourceManager.GetString("AlternativeDescriptionForLinkNeeded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Info: If the picture conveys information, a short alternative text is required. First name the type and then the core message of the image, e.g.: &quot;Logo a11y design&quot;, &quot;Photo of the TV tower Berlin&quot;, &quot;Drawing of mint&quot;, &quot;Art print: Abstract picture by Gerhard Richter&quot;. ähnelt.
        /// </summary>
        internal static string AlternativeTextInfoBox {
            get {
                return ResourceManager.GetString("AlternativeTextInfoBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Alternative Texts ähnelt.
        /// </summary>
        internal static string Alternativetexts {
            get {
                return ResourceManager.GetString("Alternativetexts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die alternative text  ähnelt.
        /// </summary>
        internal static string Alternativtext {
            get {
                return ResourceManager.GetString("Alternativtext", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Alternativ text for Image ähnelt.
        /// </summary>
        internal static string AlternativtextForImage {
            get {
                return ResourceManager.GetString("AlternativtextForImage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Animated Element ähnelt.
        /// </summary>
        internal static string AnimatedShape {
            get {
                return ResourceManager.GetString("AnimatedShape", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Please avoid animated objects in your presentations. ähnelt.
        /// </summary>
        internal static string AnimatedShapeDescription {
            get {
                return ResourceManager.GetString("AnimatedShapeDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Please add an alternative text or group the element, in case it belongs to other elements. ähnelt.
        /// </summary>
        internal static string AutoShapeNoAltTextDescription {
            get {
                return ResourceManager.GetString("AutoShapeNoAltTextDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Info ähnelt.
        /// </summary>
        internal static string btnAbout {
            get {
                return ResourceManager.GetString("btnAbout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Activate license ähnelt.
        /// </summary>
        internal static string btnActivateLicense {
            get {
                return ResourceManager.GetString("btnActivateLicense", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Edit Alt Texts ähnelt.
        /// </summary>
        internal static string btnAlternativeTexts {
            get {
                return ResourceManager.GetString("btnAlternativeTexts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Check Document ähnelt.
        /// </summary>
        internal static string btnCheckDocument {
            get {
                return ResourceManager.GetString("btnCheckDocument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Hints ähnelt.
        /// </summary>
        internal static string btnDocumentHints {
            get {
                return ResourceManager.GetString("btnDocumentHints", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Help ähnelt.
        /// </summary>
        internal static string btnHelp {
            get {
                return ResourceManager.GetString("btnHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Edit Metadata ähnelt.
        /// </summary>
        internal static string btnMetadata {
            get {
                return ResourceManager.GetString("btnMetadata", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Export PDF ähnelt.
        /// </summary>
        internal static string btnPdfExport {
            get {
                return ResourceManager.GetString("btnPdfExport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Edit Reading Order ähnelt.
        /// </summary>
        internal static string btnReadingOrder {
            get {
                return ResourceManager.GetString("btnReadingOrder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Send Bug Report ähnelt.
        /// </summary>
        internal static string btnSendBugReport {
            get {
                return ResourceManager.GetString("btnSendBugReport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Check Reading Order (slide{0}) ähnelt.
        /// </summary>
        internal static string CheckReadingOrder {
            get {
                return ResourceManager.GetString("CheckReadingOrder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap chevron_down {
            get {
                object obj = ResourceManager.GetObject("chevron_down", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap chevron_up {
            get {
                object obj = ResourceManager.GetObject("chevron_up", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Close ähnelt.
        /// </summary>
        internal static string CloseText {
            get {
                return ResourceManager.GetString("CloseText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Contaitns AutoShape ähnelt.
        /// </summary>
        internal static string ContainsAutoShape {
            get {
                return ResourceManager.GetString("ContainsAutoShape", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Could not find the product. ähnelt.
        /// </summary>
        internal static string CouldNotFindProduct {
            get {
                return ResourceManager.GetString("CouldNotFindProduct", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Damaged Link ähnelt.
        /// </summary>
        internal static string DamagedLink {
            get {
                return ResourceManager.GetString("DamagedLink", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die MM.dd.yyyy ähnelt.
        /// </summary>
        internal static string DateFormat {
            get {
                return ResourceManager.GetString("DateFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This is the demo version of a11y PDF. Only five pages will be exported. ähnelt.
        /// </summary>
        internal static string DemoExport {
            get {
                return ResourceManager.GetString("DemoExport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Demo license ähnelt.
        /// </summary>
        internal static string DemoLicense {
            get {
                return ResourceManager.GetString("DemoLicense", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Demo license expired ähnelt.
        /// </summary>
        internal static string DemoLicenseExpired {
            get {
                return ResourceManager.GetString("DemoLicenseExpired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Description for Link ähnelt.
        /// </summary>
        internal static string DescriptionForLink {
            get {
                return ResourceManager.GetString("DescriptionForLink", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Image {1} (Slide {0}) ähnelt.
        /// </summary>
        internal static string detailsErrorMissingAltText {
            get {
                return ResourceManager.GetString("detailsErrorMissingAltText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Duplicate Title of Slide ähnelt.
        /// </summary>
        internal static string DuplicateSlideTitle {
            get {
                return ResourceManager.GetString("DuplicateSlideTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Empty Cell ähnelt.
        /// </summary>
        internal static string EmptyCell {
            get {
                return ResourceManager.GetString("EmptyCell", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Empty cells can lead to confusing tables for people using a screen reader. Please check if you can merge cells or if you can add text such as &quot;no data&quot; to the cell. ähnelt.
        /// </summary>
        internal static string EmptyCellDescription {
            get {
                return ResourceManager.GetString("EmptyCellDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Empty cell in table ähnelt.
        /// </summary>
        internal static string EmptyDataCell {
            get {
                return ResourceManager.GetString("EmptyDataCell", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Empty headline cell ähnelt.
        /// </summary>
        internal static string EmptyHeaderCell {
            get {
                return ResourceManager.GetString("EmptyHeaderCell", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Empty cells in areas of the table marked as headings can lead to problems with the comprehensibility of the table. Choose meaningful headings for the assigned cells. ähnelt.
        /// </summary>
        internal static string EmptyHeaderCellDescription {
            get {
                return ResourceManager.GetString("EmptyHeaderCellDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Title not set in meta data ähnelt.
        /// </summary>
        internal static string EmptyMetaDataTitle {
            get {
                return ResourceManager.GetString("EmptyMetaDataTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap error_circle {
            get {
                object obj = ResourceManager.GetObject("error_circle", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Form elements cannot be included in the export. This element is exported as image. Please add an alternative text corresponding to it or convert the object to a standard object (text, image, etc.). ähnelt.
        /// </summary>
        internal static string ErrorByControlObjectDescription {
            get {
                return ResourceManager.GetString("ErrorByControlObjectDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die A so-called &quot;embedded object&quot; is handled as an image during export. Please create an alternative text or insert the object directly as a native element (e.g. as a table) if possible. ähnelt.
        /// </summary>
        internal static string ErrorByEmbeddedObjectDescription {
            get {
                return ResourceManager.GetString("ErrorByEmbeddedObjectDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Freehand drawing error ähnelt.
        /// </summary>
        internal static string ErrorByInk {
            get {
                return ResourceManager.GetString("ErrorByInk", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Path cannot be captured by the screen reader, please convert the path to an image by right-clicking on the object and then specify an alternative text. ähnelt.
        /// </summary>
        internal static string ErrorByInkCommentDescription {
            get {
                return ResourceManager.GetString("ErrorByInkCommentDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die If there is a single path object, this should be converted to a graphic. If there are several path objects on a slide that belong together, they should be added to a group. In the next step, an alternative text can then be created for the group. ähnelt.
        /// </summary>
        internal static string ErrorByInkDescription {
            get {
                return ResourceManager.GetString("ErrorByInkDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die A so-called &quot;Linked Object&quot; is handled as an image during export. Please create an alternative text or insert the object directly as a native element (e.g. as a table), if possible. ähnelt.
        /// </summary>
        internal static string ErrorByLinkedObjectDescription {
            get {
                return ResourceManager.GetString("ErrorByLinkedObjectDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Error due to object ähnelt.
        /// </summary>
        internal static string ErrorByObject {
            get {
                return ResourceManager.GetString("ErrorByObject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die An error occurred when contacting the license  server. ähnelt.
        /// </summary>
        internal static string ErrorDuringContactionServer {
            get {
                return ResourceManager.GetString("ErrorDuringContactionServer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Error List ähnelt.
        /// </summary>
        internal static string ErrorsAccordeonHeadline {
            get {
                return ResourceManager.GetString("ErrorsAccordeonHeadline", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Export is not possible because the PDF file is already open. Close the PDF file. ähnelt.
        /// </summary>
        internal static string ExportAbortFileIsOpened {
            get {
                return ResourceManager.GetString("ExportAbortFileIsOpened", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Font cannot embed in PDF. ähnelt.
        /// </summary>
        internal static string FontCannotembedInPDF {
            get {
                return ResourceManager.GetString("FontCannotembedInPDF", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Checking for errors ähnelt.
        /// </summary>
        internal static string FormTitleErrorChecking {
            get {
                return ResourceManager.GetString("FormTitleErrorChecking", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die a11y pdf analysis ähnelt.
        /// </summary>
        internal static string FoundProblems {
            get {
                return ResourceManager.GetString("FoundProblems", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die About  ähnelt.
        /// </summary>
        internal static string GroupA11yPdf {
            get {
                return ResourceManager.GetString("GroupA11yPdf", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Create ähnelt.
        /// </summary>
        internal static string GroupCreatePdf {
            get {
                return ResourceManager.GetString("GroupCreatePdf", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Show ähnelt.
        /// </summary>
        internal static string GroupName {
            get {
                return ResourceManager.GetString("GroupName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Modify ähnelt.
        /// </summary>
        internal static string GroupTools {
            get {
                return ResourceManager.GetString("GroupTools", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap hasAltText {
            get {
                object obj = ResourceManager.GetObject("hasAltText", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap hasNoAltText {
            get {
                object obj = ResourceManager.GetObject("hasNoAltText", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap helpIcon {
            get {
                object obj = ResourceManager.GetObject("helpIcon", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Open Help window ähnelt.
        /// </summary>
        internal static string HelpScreenTip {
            get {
                return ResourceManager.GetString("HelpScreenTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Hint ähnelt.
        /// </summary>
        internal static string Hint {
            get {
                return ResourceManager.GetString("Hint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Here, you will find notes on some error types as soon as you select them in the error list. ähnelt.
        /// </summary>
        internal static string HintAreaDefaultText {
            get {
                return ResourceManager.GetString("HintAreaDefaultText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap hintIcon {
            get {
                object obj = ResourceManager.GetObject("hintIcon", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Hint List ähnelt.
        /// </summary>
        internal static string HintsAccordeonHeadline {
            get {
                return ResourceManager.GetString("HintsAccordeonHeadline", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Hyperlink ähnelt.
        /// </summary>
        internal static string Hyperlink {
            get {
                return ResourceManager.GetString("Hyperlink", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die There are some problems with this hyperlink [...] ähnelt.
        /// </summary>
        internal static string HyperlinkProblems {
            get {
                return ResourceManager.GetString("HyperlinkProblems", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Replace Font ähnelt.
        /// </summary>
        internal static string incidentFontHint {
            get {
                return ResourceManager.GetString("incidentFontHint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Font in Master causes some problems. ähnelt.
        /// </summary>
        internal static string incidentFontInMaster {
            get {
                return ResourceManager.GetString("incidentFontInMaster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Fonts in master template is replaced. ähnelt.
        /// </summary>
        internal static string incidentFontReplaceInMasterHint {
            get {
                return ResourceManager.GetString("incidentFontReplaceInMasterHint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Font issue in table ähnelt.
        /// </summary>
        internal static string incidentFontTableName {
            get {
                return ResourceManager.GetString("incidentFontTableName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Font causes problems ähnelt.
        /// </summary>
        internal static string incidentFontText {
            get {
                return ResourceManager.GetString("incidentFontText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap inspectIcon {
            get {
                object obj = ResourceManager.GetObject("inspectIcon", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Internal link to slide  ähnelt.
        /// </summary>
        internal static string internalLinkToSlide {
            get {
                return ResourceManager.GetString("internalLinkToSlide", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Irregular table ähnelt.
        /// </summary>
        internal static string IrregularTable {
            get {
                return ResourceManager.GetString("IrregularTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This table cointains some empty cells or connected cells (?????) ähnelt.
        /// </summary>
        internal static string IrregularTableDescription {
            get {
                return ResourceManager.GetString("IrregularTableDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap isArtifact {
            get {
                object obj = ResourceManager.GetObject("isArtifact", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die a11y pdf Export ähnelt.
        /// </summary>
        internal static string Label {
            get {
                return ResourceManager.GetString("Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Checking {0} slide(s) of {1} ähnelt.
        /// </summary>
        internal static string LabelCheckingXSlidesOfY {
            get {
                return ResourceManager.GetString("LabelCheckingXSlidesOfY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Date of Expiry ähnelt.
        /// </summary>
        internal static string LabelDateOfExpiry {
            get {
                return ResourceManager.GetString("LabelDateOfExpiry", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Device Id ähnelt.
        /// </summary>
        internal static string LabelDeviceId {
            get {
                return ResourceManager.GetString("LabelDeviceId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die a11y pdf Tools ähnelt.
        /// </summary>
        internal static string LabelEditPane {
            get {
                return ResourceManager.GetString("LabelEditPane", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Friendly Name ähnelt.
        /// </summary>
        internal static string LabelFriendlyName {
            get {
                return ResourceManager.GetString("LabelFriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die License Key ähnelt.
        /// </summary>
        internal static string LabelLicenseKey {
            get {
                return ResourceManager.GetString("LabelLicenseKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die License Name ähnelt.
        /// </summary>
        internal static string LabelLicenseName {
            get {
                return ResourceManager.GetString("LabelLicenseName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Message ähnelt.
        /// </summary>
        internal static string LabelMessage {
            get {
                return ResourceManager.GetString("LabelMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Author ähnelt.
        /// </summary>
        internal static string lbAuthor {
            get {
                return ResourceManager.GetString("lbAuthor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Additional Comments ähnelt.
        /// </summary>
        internal static string lbComments {
            get {
                return ResourceManager.GetString("lbComments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Copyright Notice ähnelt.
        /// </summary>
        internal static string lbCopyNotice {
            get {
                return ResourceManager.GetString("lbCopyNotice", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Copyright status ähnelt.
        /// </summary>
        internal static string lbCopyright {
            get {
                return ResourceManager.GetString("lbCopyright", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Copyright Info URL ähnelt.
        /// </summary>
        internal static string lbCopyUrl {
            get {
                return ResourceManager.GetString("lbCopyUrl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Keywords; Commas can be used to separate keywords ähnelt.
        /// </summary>
        internal static string lbKeywords {
            get {
                return ResourceManager.GetString("lbKeywords", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Your licence is blocked and cannot be activated. ähnelt.
        /// </summary>
        internal static string LicenceKeyBlocked {
            get {
                return ResourceManager.GetString("LicenceKeyBlocked", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Demo licence ähnelt.
        /// </summary>
        internal static string LicenseCatDemoLicense {
            get {
                return ResourceManager.GetString("LicenseCatDemoLicense", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Demo licence is expired. ähnelt.
        /// </summary>
        internal static string LicenseCatDemoLicenseExpired {
            get {
                return ResourceManager.GetString("LicenseCatDemoLicenseExpired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die License file ähnelt.
        /// </summary>
        internal static string LicenseCatLocalFileLicense {
            get {
                return ResourceManager.GetString("LicenseCatLocalFileLicense", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Please activate a licence. ähnelt.
        /// </summary>
        internal static string LicenseCatNoLicense {
            get {
                return ResourceManager.GetString("LicenseCatNoLicense", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Online license ähnelt.
        /// </summary>
        internal static string LicenseCatOnlineLicense {
            get {
                return ResourceManager.GetString("LicenseCatOnlineLicense", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Your Licence has expired. ähnelt.
        /// </summary>
        internal static string LicenseExpiresNoDaysLeft {
            get {
                return ResourceManager.GetString("LicenseExpiresNoDaysLeft", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die License information ähnelt.
        /// </summary>
        internal static string LicenseInfoWindowTitle {
            get {
                return ResourceManager.GetString("LicenseInfoWindowTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No new licence could be activated because the licence limit has been reached. ähnelt.
        /// </summary>
        internal static string LicenseLimitReached {
            get {
                return ResourceManager.GetString("LicenseLimitReached", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die AddIn for accessible PDF ähnelt.
        /// </summary>
        internal static string mainTaskPaneText {
            get {
                return ResourceManager.GetString("mainTaskPaneText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Artifact ähnelt.
        /// </summary>
        internal static string markAsArtifact {
            get {
                return ResourceManager.GetString("markAsArtifact", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Your licence could not be activated. ähnelt.
        /// </summary>
        internal static string messageActivationFailure {
            get {
                return ResourceManager.GetString("messageActivationFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Your license is activated now. Please restart PowerPoint. ähnelt.
        /// </summary>
        internal static string messageActivationSuccess {
            get {
                return ResourceManager.GetString("messageActivationSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Metadata ähnelt.
        /// </summary>
        internal static string MetaData {
            get {
                return ResourceManager.GetString("MetaData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Info: An accessible presentation must contain a title. Please add a meaningful title for your presentation so that people can already infer the content from the title. ähnelt.
        /// </summary>
        internal static string MetaDataInfoBox {
            get {
                return ResourceManager.GetString("MetaDataInfoBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Missing alt text (en-gb) ähnelt.
        /// </summary>
        internal static string MissingAltText {
            get {
                return ResourceManager.GetString("MissingAltText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Missing alternative text for chart ähnelt.
        /// </summary>
        internal static string MissingAltTextForDiagram {
            get {
                return ResourceManager.GetString("MissingAltTextForDiagram", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Missing alternative text for form ähnelt.
        /// </summary>
        internal static string MissingAltTextForForm {
            get {
                return ResourceManager.GetString("MissingAltTextForForm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Missing alternative text for grouped elements ähnelt.
        /// </summary>
        internal static string MissingAltTextForGroup {
            get {
                return ResourceManager.GetString("MissingAltTextForGroup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Missing alt text for image (en-gb) ähnelt.
        /// </summary>
        internal static string MissingAltTextForImage {
            get {
                return ResourceManager.GetString("MissingAltTextForImage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Missing alt text for link ähnelt.
        /// </summary>
        internal static string MissingAltTextForLink {
            get {
                return ResourceManager.GetString("MissingAltTextForLink", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Missing alternative text for media ähnelt.
        /// </summary>
        internal static string MissingAltTextForMedia {
            get {
                return ResourceManager.GetString("MissingAltTextForMedia", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Missing alternative text for newer visual content ähnelt.
        /// </summary>
        internal static string MissingAltTextForNewerVisualContent {
            get {
                return ResourceManager.GetString("MissingAltTextForNewerVisualContent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Missing alternative text for object ähnelt.
        /// </summary>
        internal static string MissingAltTextForObject {
            get {
                return ResourceManager.GetString("MissingAltTextForObject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Missing alternative text for SmartArt ähnelt.
        /// </summary>
        internal static string MissingAltTextForSmartArt {
            get {
                return ResourceManager.GetString("MissingAltTextForSmartArt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Missing alt text for table ähnelt.
        /// </summary>
        internal static string MissingAltTextForTable {
            get {
                return ResourceManager.GetString("MissingAltTextForTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Missing alt text for table ähnelt.
        /// </summary>
        internal static string MissingAltTextForTable1 {
            get {
                return ResourceManager.GetString("MissingAltTextForTable1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Missing Slide title ähnelt.
        /// </summary>
        internal static string MissingSlideTitle {
            get {
                return ResourceManager.GetString("MissingSlideTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die There are no accessilbility issues in your document. ähnelt.
        /// </summary>
        internal static string NoErrorsLabel {
            get {
                return ResourceManager.GetString("NoErrorsLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die There are no more hints available. ähnelt.
        /// </summary>
        internal static string NoHintsLabel {
            get {
                return ResourceManager.GetString("NoHintsLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die There are no images on this slide. ähnelt.
        /// </summary>
        internal static string noImagesOnSlide {
            get {
                return ResourceManager.GetString("noImagesOnSlide", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die For all links without tooltip text, a11y pdf has entered the URL as alternative text. Please adjust the tooltip texts for the respective links if necessary. After rechecking the PowerPoint, these link errors will no longer be displayed. ähnelt.
        /// </summary>
        internal static string NoQuickInfoForLinkHint {
            get {
                return ResourceManager.GetString("NoQuickInfoForLinkHint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Invalid licence key. Contact us by e-mail at support@a11y-design.de. ähnelt.
        /// </summary>
        internal static string NoValidLicenseKey {
            get {
                return ResourceManager.GetString("NoValidLicenseKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Check presentation ähnelt.
        /// </summary>
        internal static string OpenInspectScreenTip {
            get {
                return ResourceManager.GetString("OpenInspectScreenTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Reading Order ähnelt.
        /// </summary>
        internal static string ReadingOrder {
            get {
                return ResourceManager.GetString("ReadingOrder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Adjust the reading order so that items are retrieved in a meaningful order via a screen reader. Reading order can be changed via drag and drop where the lowest element is the first in the reading order. ähnelt.
        /// </summary>
        internal static string ReadingOrderDefaultText {
            get {
                return ResourceManager.GetString("ReadingOrderDefaultText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Refresh ähnelt.
        /// </summary>
        internal static string RefreshButton {
            get {
                return ResourceManager.GetString("RefreshButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die recheck document ähnelt.
        /// </summary>
        internal static string ReloadErrorList {
            get {
                return ResourceManager.GetString("ReloadErrorList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Save ähnelt.
        /// </summary>
        internal static string SaveButton {
            get {
                return ResourceManager.GetString("SaveButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Screenshot Webcam ähnelt.
        /// </summary>
        internal static string ScreenshotWebcam {
            get {
                return ResourceManager.GetString("ScreenshotWebcam", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This is a bug report.%0D%0A
        ///Please attach the powerpoint file to this email.%0D%0A
        ///Furthermore, please provide information or a step by step explanation on how to reconstruct the error. ähnelt.
        /// </summary>
        internal static string SendReport {
            get {
                return ResourceManager.GetString("SendReport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Set Title in Metadata ähnelt.
        /// </summary>
        internal static string SetMetaDataTitle {
            get {
                return ResourceManager.GetString("SetMetaDataTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Chart ähnelt.
        /// </summary>
        internal static string ShapeTypeChart {
            get {
                return ResourceManager.GetString("ShapeTypeChart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Group ähnelt.
        /// </summary>
        internal static string ShapeTypeGroup {
            get {
                return ResourceManager.GetString("ShapeTypeGroup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Image ähnelt.
        /// </summary>
        internal static string ShapeTypeImage {
            get {
                return ResourceManager.GetString("ShapeTypeImage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die SmartArt ähnelt.
        /// </summary>
        internal static string ShapeTypeSmartArt {
            get {
                return ResourceManager.GetString("ShapeTypeSmartArt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Table ähnelt.
        /// </summary>
        internal static string ShapeTypeTable {
            get {
                return ResourceManager.GetString("ShapeTypeTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Open Help ähnelt.
        /// </summary>
        internal static string ShowHelpText {
            get {
                return ResourceManager.GetString("ShowHelpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Change Reading Order ähnelt.
        /// </summary>
        internal static string ShowReadingOrder {
            get {
                return ResourceManager.GetString("ShowReadingOrder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die  Show reading order inside the Slide ähnelt.
        /// </summary>
        internal static string ShowReadingOrderText {
            get {
                return ResourceManager.GetString("ShowReadingOrderText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Add some more details to this table, about what is contained in there. ähnelt.
        /// </summary>
        internal static string TableNoAltTextDescription {
            get {
                return ResourceManager.GetString("TableNoAltTextDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Do you want to send a bug report via mail? ähnelt.
        /// </summary>
        internal static string TemplateBugReportMessage {
            get {
                return ResourceManager.GetString("TemplateBugReportMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Textbox has a colored background, but no text is written. Please mark as artifact, enter an altenative text or write something inside the textbox. ähnelt.
        /// </summary>
        internal static string TextBoxAltDescription {
            get {
                return ResourceManager.GetString("TextBoxAltDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die TextBox with border ähnelt.
        /// </summary>
        internal static string TextBoxBorder {
            get {
                return ResourceManager.GetString("TextBoxBorder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Colored textboxes are exported as images. Please write a corrseponding alternativtext. ähnelt.
        /// </summary>
        internal static string TextBoxBorderHint {
            get {
                return ResourceManager.GetString("TextBoxBorderHint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Colored Textbox without text ähnelt.
        /// </summary>
        internal static string TextBoxFilled {
            get {
                return ResourceManager.GetString("TextBoxFilled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die It is not possible to generate the PDF file because they do not have a valid licence. ähnelt.
        /// </summary>
        internal static string TextGenerationNotPossibleNoLizenz {
            get {
                return ResourceManager.GetString("TextGenerationNotPossibleNoLizenz", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The PDF was generated successfully. ähnelt.
        /// </summary>
        internal static string TextSuccessGeneration {
            get {
                return ResourceManager.GetString("TextSuccessGeneration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Activation of your license ähnelt.
        /// </summary>
        internal static string titleMessageActivation {
            get {
                return ResourceManager.GetString("titleMessageActivation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Title of Document ähnelt.
        /// </summary>
        internal static string TitleOfDocument {
            get {
                return ResourceManager.GetString("TitleOfDocument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Versionnumber ähnelt.
        /// </summary>
        internal static string VersionNr {
            get {
                return ResourceManager.GetString("VersionNr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Warning ähnelt.
        /// </summary>
        internal static string Warning {
            get {
                return ResourceManager.GetString("Warning", resourceCulture);
            }
        }
    }
}
